
plugins {
    id "com.iadams.sonar-packaging" version "1.0-RC1"
}

apply plugin: 'java-library'

dependencies {
    ext {
        // set the minimum required SonarQube version
        sonarqubeVersion = "5.6.3"
    }

    provided "org.sonarsource.sonarqube:sonar-plugin-api:${sonarqubeVersion}"
    compile "com.google.guava:guava:${guavaVersion}"
    compile "org.apache.ant:ant:${antVersion}"

    provided "org.slf4j:slf4j-api:${slf4jVersion}"
    provided "ch.qos.logback:logback-core:${logbackVersion}"
    provided "ch.qos.logback:logback-classic:${logbackVersion}"
}

sonarPackaging {
    // local environment, for testing:
    serverUrl = 'http://localhost:9000'
    pluginDir = 'v:/software/sonarqube-5.6.4/extensions/plugins'

    // Plugin metadata:
    pluginKey = 'qavSonarPlugin'
    pluginClass = 'de.qaware.qav.sonar.plugin.QavSonarPlugin'
    pluginName = 'QAvalidator SonarQube Plugin'
    pluginDescription = 'Show the QAvalidator results in SonarQube'

    // Info:
    pluginParent = null
    pluginLicense = '' // not decided yet
    requirePlugins = null
    pluginUrl = 'https://qavalidator.github.io/'
    pluginIssueTrackerUrl = 'https://github.com/qavalidator/qavalidator/issues'
    pluginTermsConditionsUrl = 'https://github.com/qavalidator/qavalidator'
    pluginSourceUrl = 'https://github.com/qavalidator/qavalidator/issues'
    pluginDevelopers = 'QAware GmbH'
    skipDependenciesPackaging = false
    useChildFirstClassLoader = false
    basePlugin = ''
    organization{
        name = 'QAware GmbH'
        url = 'https://www.qaware.de'
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        qavSonarPlugin(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom.withXml {
                asNode().appendNode('name', "QAvalidator :: ${project.name}")
                asNode().appendNode('description', project.description)
                asNode().appendNode('url', project.websiteUrl)

                asNode().children().last() + project.pomConfig
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUsername') ? project.bintrayUsername : 'unknown'
    key = project.hasProperty('bintrayApiKey') ? project.bintrayApiKey : 'unknown'
    publications = ['qavSonarPlugin']
    dryRun = false
    publish = true
    pkg {
        repo = project.bintrayRepo
        name = project.name
        desc = project.description
        licenses = ['Apache-2.0']
        labels = ['qaware', 'architecture', 'validation']
        websiteUrl = project.websiteUrl
        issueTrackerUrl = project.issueTrackerUrl
        vcsUrl = project.scmUrl
        publicDownloadNumbers = true
        version {
            name = project.version
            desc = project.description
            released = new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZZ")
            vcsTag = "v${project.version}"
            mavenCentralSync {
                sync = false
            }
        }
    }
}
