/*
 * Test utils.
 *
 * To use these, add a dependency like this:
 *
 * testCompile project(path: ':util:qav-test-util', configuration: 'testOutput')
 */

apply plugin: 'java-library'

task testJar(type: Jar, dependsOn: testClasses) {
    classifier = 'tests'
    from sourceSets.test.output
}

configurations {
    testOutput.extendsFrom (testCompile)
}

task testSourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.test.allSource
}

artifacts {
    testOutput testJar
    archives testSourcesJar
}

publishing {
    publications {
        qavTestJarPublication(MavenPublication) {
            from components.java
            artifact testSourcesJar
            artifact testJar

            pom.withXml {
                asNode().appendNode('name', "QAvalidator :: ${project.name}")
                asNode().appendNode('description', project.description)
                asNode().appendNode('url', project.websiteUrl)

                asNode().children().last() + project.pomConfig
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUsername') ? project.bintrayUsername : 'unknown'
    key = project.hasProperty('bintrayApiKey') ? project.bintrayApiKey : 'unknown'
    publications = ['qavTestJarPublication']
    dryRun = false
    publish = true
    pkg {
        repo = project.bintrayRepo
        name = project.name
        desc = project.description
        licenses = ['Apache-2.0']
        labels = ['qaware', 'architecture', 'validation']
        websiteUrl = project.websiteUrl
        issueTrackerUrl = project.issueTrackerUrl
        vcsUrl = project.scmUrl
        publicDownloadNumbers = true
        version {
            name = project.version
            desc = project.description
            released = new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZZ")
            vcsTag = "v${project.version}"
            mavenCentralSync {
                sync = false
            }
        }
    }
}
